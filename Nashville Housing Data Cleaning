/* 
Cleaning Data with SQL queries
*/

select * from NashvilleHousing

--Standardize Date Format 

Select SaleDate 
From NashvilleHousing
/* 
Select SaleDate, CONVERT(Date, SaleDate)
From NashvilleHousing

Update NashvilleHousing
SET SaleDate = CONVERT(Date, SaleDate)
*/
----------------------------------------------------------------------------------

-- Populate Property Address data
SELECT *
FROM NashvilleHousing
WHERE PropertyAddress is null

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM NashvilleHousing a
JOIN NashvilleHousing b on a.ParcelID = b.ParcelID AND a.UniqueID <> b.UniqueID
where a.PropertyAddress is null

UPDATE a 
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM NashvilleHousing a
JOIN NashvilleHousing b on a.ParcelID = b.ParcelID AND a.UniqueID <> b.UniqueID
where a.PropertyAddress is null
-------------------------------------------------------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address, City, State)

SELECT PropertyAddress
FROM NashvilleHousing


SELECT SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) as Address,
SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1, LEN(PropertyAddress)) as Address
FROM NashvilleHousing

 ---creating 2 new columns---
ALTER TABLE NashvilleHousing
Add PropertySplitAddress NVARCHAR(255)

Update NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1)

ALTER TABLE NashvilleHousing
Add PropertySplitCity NVARCHAR(255)

Update NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1, LEN(PropertyAddress))

 ---Splitting Owner Address---
 

 Select
 PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)
 ,PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)
 ,PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)
 from NashvilleHousing

ALTER TABLE NashvilleHousing
Add OwnerSplitAddress NVARCHAR(255)

Update NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)

ALTER TABLE NashvilleHousing
Add OwnerSplitCity NVARCHAR(255)

Update NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)

ALTER TABLE NashvilleHousing
Add OwnerSplitState NVARCHAR(255)

Update NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)

Select * from NashvilleHousing


------------------------------------------------------------------
--Change Y and N to Yes and No in "Sold as Vacant" field
Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From NashvilleHousing
Group By SoldAsVacant
order by 2

Select SoldAsVacant, 
    CASE when SoldAsVacant = 'Y' THEN 'Yes'
        when SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant
    END
From NashvilleHousing

Update NashvilleHousing 
SET SoldAsVacant =   CASE when SoldAsVacant = 'Y' THEN 'Yes'
        when SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant
    END


---------------------------------------------------------------------
--Remove Duplicates--

WITH RowNumCTE AS (
Select *, ROW_NUMBER() OVER (
    PARTITION BY ParcelID, PropertyAddress, SalePrice, SaleDate, LegalReference
        ORDER BY UniqueID ) row_num

From NashvilleHousing
) 
Select * --Delete
from RowNumCTE
where row_num > 1


---------------------------------------------------------
--Delete Unused Columns--
Select *
From NashvilleHousing

ALTER TABLE NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress
